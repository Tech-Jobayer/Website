// --- Drawer Control Functions ---
// Sidebar Drawer JS
document.getElementById('menuBtn').onclick = function() {
  document.getElementById('sidebar').style.width = "240px";
  // ‡¶∏‡¶æ‡¶á‡¶°‡¶¨‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶≤‡¶≤‡ßá ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
  document.getElementById('profileDrawer').style.width = "0";
  document.getElementById('profileDrawer').style.display = "none"; // ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶°‡¶ø‡¶∏‡¶™‡ßç‡¶≤‡ßá ‡¶®‡¶æ ‡¶π‡¶Ø‡¶º
};

function closeSidebar() {
  document.getElementById('sidebar').style.width = "0";
}

// Profile Drawer JS
document.getElementById('profileBtn').onclick = function() {
  const profileDrawer = document.getElementById('profileDrawer');
  profileDrawer.style.display = "block"; // ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ñ‡ßã‡¶≤‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶è‡¶ü‡¶ø ‡¶°‡¶ø‡¶∏‡¶™‡ßç‡¶≤‡ßá ‡¶ï‡¶∞‡ßÅ‡¶®
  profileDrawer.style.width = "280px"; // ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ü‡¶æ ‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶•
  // ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶≤‡¶≤‡ßá ‡¶∏‡¶æ‡¶á‡¶°‡¶¨‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
  document.getElementById('sidebar').style.width = "0";
};

function closeProfileDrawer() {
  const profileDrawer = document.getElementById('profileDrawer');
  profileDrawer.style.width = "0";
  profileDrawer.style.display = "none"; // ‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶ø‡¶∏‡¶™‡ßç‡¶≤‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
}

// Notification Drawer JS
document.getElementById('notifyBtn').onclick = function() {
  const notificationDrawer = document.getElementById('notificationDrawer');
  notificationDrawer.style.display = "block";
  notificationDrawer.style.width = "280px";
  // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶≤‡¶≤‡ßá ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
  document.getElementById('sidebar').style.width = "0";
  document.getElementById('profileDrawer').style.width = "0";
  document.getElementById('profileDrawer').style.display = "none";
  fetchAndDisplayNotifications(); // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶≤‡ßã‡¶° ‡¶ì ‡¶°‡¶ø‡¶∏‡¶™‡ßç‡¶≤‡ßá ‡¶ï‡¶∞‡ßÅ‡¶®
};

function closeNotificationDrawer() {
  const notificationDrawer = document.getElementById('notificationDrawer');
  notificationDrawer.style.width = "0";
  notificationDrawer.style.display = "none";
}


// --- Firebase Initialization & Core Functions ---
// Firebase Config
const firebaseConfig = {
  apiKey: "AIzaSyAC4h55aA0Zz--V5ejyndzR5WC_-9rAPio",
  authDomain: "subscribe-bot-6f9b2.firebaseapp.com",
  databaseURL: "https://subscribe-bot-6f9b2-default-rtdb.firebaseio.com",
  projectId: "subscribe-bot-6f9b2",
  storageBucket: "subscribe-bot-6f9b2.appspot.com",
  messagingSenderId: "141787931031",
  appId: "1:141787931031:web:2108a3e930f5ce4fbc64d2"
};

firebase.initializeApp(firebaseConfig);
const auth = firebase.auth();
const db = firebase.database();
// const storage = firebase.storage(); // ‡¶Ø‡¶¶‡¶ø ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶ø‡¶ï‡¶ö‡¶æ‡¶∞ ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶æ‡¶≤‡¶ø‡¶ü‡¶ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßá‡¶® ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶è‡¶ü‡¶ø ‡¶Ü‡¶®‡¶ï‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®

function redirectToLogin() {
  const basePath = window.location.pathname.split('/')[1];
  window.location.href = `${location.origin}/${basePath}/login/`;
}

function logout() {
  auth.signOut().then(() => {
    document.getElementById('headerUserPoints').innerText = '';
    updateProfileDrawerUI(null); // ‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
    closeProfileDrawer(); // ‡¶≤‡¶ó‡¶Ü‡¶â‡¶ü ‡¶π‡¶≤‡ßá ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
    location.reload(); // ‡¶™‡ßÉ‡¶∑‡ßç‡¶†‡¶æ ‡¶∞‡¶ø‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
  }).catch(error => {
    console.error("Logout error:", error);
  });
}

// --- User Data Loading Functions ---
function loadPoints(uid) {
  const headerUserPointsElement = document.getElementById('headerUserPoints');
  const drawerUserPointsElement = document.getElementById('drawerUserPoints');

  db.ref('users/' + uid + '/points').on('value', snap => {
    const points = snap.val() || 0;
    if (headerUserPointsElement) {
      headerUserPointsElement.innerHTML = `üí∞ ${points}`;
    }
    if (drawerUserPointsElement) {
      drawerUserPointsElement.innerHTML = `üí∞ ${points} ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü`;
    }
  });
}

function loadTasks() {
  const list = document.getElementById("taskList");
  return db.ref('tasks').once('value')
    .then(snap => {
      const data = snap.val();
      list.innerHTML = '';
      if (!data) {
        list.innerHTML = "<p>üò¢ ‡¶ï‡ßã‡¶®‡ßã ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶®‡ßá‡¶á</p>";
        return;
      }
      Object.entries(data).forEach(([key, ch]) => {
        // ‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶ú ‡¶ó‡¶£‡¶®‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®
        const percentage = Math.round((ch.completed / ch.max) * 100);

        const cardLink = document.createElement('a');
        cardLink.href = `${window.location.origin}/Website/dashboard/task.html?taskId=${encodeURIComponent(key)}`;
        cardLink.target = "_blank";
        cardLink.rel = "noopener noreferrer";
        cardLink.className = "card-link";
        cardLink.innerHTML = `
          <div class="card">
            <div class="card-header">
              <h3>${ch.title}</h3>
            </div>
            <p>‡¶∏‡¶æ‡¶¨‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶æ‡¶á‡¶¨‡¶æ‡¶∞: ${ch.completed} / ${ch.max}</p>
            <div class="progress-container">
              <div class="progress-percentage">${percentage}%</div>
              <div class="progress">
                <div class="progress-bar" style="width: ${percentage}%"></div>
              </div>
            </div>
          </div>
        `;
        list.appendChild(cardLink);
      });
    })
    .catch(err => {
      console.error("‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶≤‡ßã‡¶° ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", err);
      list.innerHTML = "<p>‚ùå ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá</p>";
    });
}

// --- Notification Functions ---
function fetchAndDisplayNotifications() {
  const notificationList = document.getElementById('notificationList');
  notificationList.innerHTML = '<p class="no-notifications-message">‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</p>'; // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú

  db.ref('notifications').orderByChild('timestamp').once('value')
    .then(snapshot => {
      const notifications = [];
      snapshot.forEach(childSnapshot => {
        const notification = childSnapshot.val();
        notification.id = childSnapshot.key; // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ID ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
        notifications.unshift(notification); // ‡¶®‡¶§‡ßÅ‡¶® ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶â‡¶™‡¶∞‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶§‡ßá
      });

      notificationList.innerHTML = ''; // ‡¶™‡ßÅ‡¶∞‡ßã‡¶®‡ßã ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∏‡¶∞‡¶æ‡¶®

      if (notifications.length === 0) {
        notificationList.innerHTML = '<p class="no-notifications-message">‡¶ï‡ßã‡¶®‡ßã ‡¶®‡¶§‡ßÅ‡¶® ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶®‡ßá‡¶á‡•§</p>';
        return;
      }

      notifications.forEach(notif => {
        const notifItem = document.createElement('div');
        notifItem.className = `notification-item ${notif.read ? '' : 'unread'}`;
        notifItem.dataset.id = notif.id; // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ID ‡¶°‡ßá‡¶ü‡¶æ‡¶∏‡ßá‡¶ü‡ßá ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®

        const date = new Date(notif.timestamp);
        const formattedTime = date.toLocaleTimeString('bn-BD', { hour: '2-digit', minute: '2-digit' });
        const formattedDate = date.toLocaleDateString('bn-BD', { day: 'numeric', month: 'long', year: 'numeric' });

        notifItem.innerHTML = `
          <h4>${notif.title}</h4>
          <p>${notif.message}</p>
          <div class="timestamp">${formattedDate} ${formattedTime}</div>
        `;
        notifItem.addEventListener('click', () => markNotificationAsRead(notif.id, notifItem));
        notificationList.appendChild(notifItem);
      });
      updateNotificationBadge(); // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶°‡¶ø‡¶∏‡¶™‡ßç‡¶≤‡ßá ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
    })
    .catch(error => {
      console.error("‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá:", error);
      notificationList.innerHTML = '<p class="no-notifications-message">‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§</p>';
    });
}

function updateNotificationBadge() {
  const currentUser = auth.currentUser;
  const notifyCountElement = document.querySelector('.notify-count'); // ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü

  if (!currentUser) {
    // ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
    // ‡¶è‡¶á ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶ø ‡¶∏‡¶ø‡¶¶‡ßç‡¶ß‡¶æ‡¶®‡ßç‡¶§ ‡¶®‡¶ø‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶® ‡¶Ø‡ßá ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü‡¶≠‡¶æ‡¶¨‡ßá ‡¶ï‡¶§‡¶ó‡ßÅ‡¶≤‡ßã ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá‡¶®
    // ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú‡¶ü‡¶ø ‡¶ñ‡¶æ‡¶≤‡¶ø ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá‡¶® ‡¶¨‡¶æ ‡¶≤‡ßÅ‡¶ï‡¶ø‡¶Ø‡¶º‡ßá ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá‡¶®‡•§
    setNotificationCount(0); // ‡¶Ü‡¶™‡¶æ‡¶§‡¶§ ‡ß¶ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø
    return;
  }

  const userId = currentUser.uid; // ‡¶¨‡¶∞‡ßç‡¶§‡¶Æ‡¶æ‡¶® ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ UID

  db.ref('notifications').once('value') // ‡¶∏‡¶Æ‡¶∏‡ßç‡¶§ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
    .then(snapshot => {
      let unreadCount = 0;
      snapshot.forEach(childSnapshot => {
        const notification = childSnapshot.val();
        // ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡ßá‡¶∞ ID ‡¶™‡ßá‡¶§‡ßá
        notification.id = childSnapshot.key;

        // ‡¶è‡¶á ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶™‡¶°‡¶º‡ßá‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
        // ‡¶Ø‡¶¶‡¶ø notification.readBy ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá OR
        // ‡¶Ø‡¶¶‡¶ø notification.readBy ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶•‡¶æ‡¶ï‡ßá ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶§‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶á userId ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø true ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
        const isReadByUser = notification.readBy && notification.readBy[userId];

        if (!isReadByUser) {
          // ‡¶Ø‡¶¶‡¶ø ‡¶è‡¶ü‡¶ø ‡¶è‡¶á ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶®‡¶∞‡¶ø‡¶° ‡¶π‡¶Ø‡¶º
          unreadCount++;
        }
      });
      setNotificationCount(unreadCount); // ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
    })
    .catch(error => {
      console.error("‡¶Ü‡¶®‡¶∞‡¶ø‡¶° ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ‡¶ó‡¶£‡¶®‡¶æ ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá:", error);
      setNotificationCount(0); // ‡¶è‡¶∞‡¶∞ ‡¶π‡¶≤‡ßá ‡ß¶ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
    });
}

function markNotificationAsRead(notificationId, element) {
  db.ref(`notifications/${notificationId}`).update({ read: true })
    .then(() => {
      console.log(`‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ${notificationId} ‡¶™‡¶†‡¶ø‡¶§ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ö‡¶ø‡¶π‡ßç‡¶®‡¶ø‡¶§ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§`);
      if (element) {
        element.classList.remove('unread'); // CSS ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ ‡¶∏‡¶∞‡¶æ‡¶®
        element.style.backgroundColor = ''; // ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï‡¶ó‡ßç‡¶∞‡¶æ‡¶â‡¶®‡ßç‡¶° ‡¶∞‡¶ô ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
        element.querySelector('p').style.color = ''; // ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶∞‡¶ô ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
        element.querySelector('.timestamp').style.color = ''; // ‡¶ü‡¶æ‡¶á‡¶Æ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™ ‡¶∞‡¶ô ‡¶∞‡¶ø‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
      }
      updateNotificationBadge(); // ‡¶¨‡ßç‡¶Ø‡¶æ‡¶ú ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
    })
    .catch(error => {
      console.error(`‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶® ${notificationId} ‡¶™‡¶†‡¶ø‡¶§ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ö‡¶ø‡¶π‡ßç‡¶®‡¶ø‡¶§ ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá:`, error);
    });
}


// --- Profile Image Handling ---
const headerProfileImgElement = document.getElementById('profileImg');
const drawerProfileImgElement = document.getElementById('drawerProfileImg');
const defaultProfileImgUrl = "https://raw.githubusercontent.com/tech-jobayer/Website/main/data/default-profile.png";

function loadProfileImage(user) {
  const imgElements = [headerProfileImgElement, drawerProfileImgElement];

  if (user) {
    db.ref(`users/${user.uid}/profilePictureUrl`).once('value')
      .then(snapshot => {
        const customImageUrl = snapshot.val();
        imgElements.forEach(imgEl => {
          if (imgEl) {
            imgEl.src = customImageUrl || defaultProfileImgUrl;
          }
        });
      })
      .catch(error => {
        console.error("Error loading user profile picture:", error);
        imgElements.forEach(imgEl => {
          if (imgEl) {
            imgEl.src = defaultProfileImgUrl;
          }
        });
      });
  } else {
    imgElements.forEach(imgEl => {
      if (imgEl) {
        imgEl.src = defaultProfileImgUrl;
      }
    });
  }
}

// --- Profile Drawer UI Update ---
function updateProfileDrawerUI(user) {
  const drawerUserName = document.getElementById('drawerUserName');
  const drawerUserEmail = document.getElementById('drawerUserEmail');
  const drawerLoginSignupBtn = document.getElementById('drawerLoginSignupBtn');
  const drawerLogoutBtn = document.getElementById('drawerLogoutBtn');
  const drawerUserPoints = document.getElementById('drawerUserPoints'); // ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡ßá‡¶§‡ßá

  if (user) {
    drawerUserName.innerText = user.displayName || 'User';
    drawerUserEmail.innerText = user.email;
    drawerLoginSignupBtn.style.display = 'none';
    drawerLogoutBtn.style.display = 'block';
    loadPoints(user.uid); // ‡¶≤‡¶ó‡¶á‡¶® ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
  } else {
    drawerUserName.innerText = 'Guest User';
    drawerUserEmail.innerText = 'Not logged in';
    drawerLoginSignupBtn.style.display = 'block';
    drawerLogoutBtn.style.display = 'none';
    drawerUserPoints.innerHTML = 'üí∞ 0 ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü'; // ‡¶≤‡¶ó‡¶á‡¶® ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶°‡¶ø‡¶´‡¶≤‡ßç‡¶ü ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü
  }
}

// --- Global UI & Loading Logic ---
// ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü
let loadingTimeout = setTimeout(() => {
  document.getElementById("loadingScreen").style.display = "none";
  document.getElementById("dashboardContent").style.display = "block";
  loadProfileImage(auth.currentUser);
 
// ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶® ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü
let loadingTimeout = setTimeout(() => {
  document.getElementById("loadingScreen").style.display = "none";
  document.getElementById("dashboardContent").style.display = "block";
  loadProfileImage(auth.currentUser);
  updateProfileDrawerUI(auth.currentUser);
  closeProfileDrawer();
  if (!auth.currentUser) {
      document.getElementById('headerUserPoints').innerText = '';
  }
  updateNotificationBadge(); // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
}, 3000);

// auth.onAuthStateChanged ‡¶è‡¶∞ ‡¶≠‡ßá‡¶§‡¶∞‡ßá‡¶ì ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶Ø‡ßá ‡¶è‡¶ü‡¶ø ‡¶ï‡¶≤ ‡¶π‡¶ö‡ßç‡¶õ‡ßá
auth.onAuthStateChanged(user => {
  // ... (existing code) ...
  if (user) {
    // ... (existing code) ...
    updateNotificationBadge(); // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶ì ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
  } else {
    // ... (existing code) ...
    updateNotificationBadge(); // ‡¶è‡¶¨‡¶Ç ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶ì ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
  }
});

// --- Utility Functions & Animations ---
// setNotificationCount ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ü‡¶ø ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶•‡¶æ‡¶ï‡¶¨‡ßá
 updateProfileDrawerUI(auth.currentUser); // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶∂‡ßá‡¶∑‡ßá ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ UI ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
  closeProfileDrawer(); // ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶Ü‡¶õ‡ßá ‡¶Ø‡¶ñ‡¶® ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶∂‡ßá‡¶∑ ‡¶π‡¶Ø‡¶º
  // ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ ‡¶≤‡¶ó‡¶á‡¶® ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶π‡ßá‡¶°‡¶æ‡¶∞‡ßá‡¶∞ ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü ‡¶Ö‡¶Ç‡¶∂ ‡¶ñ‡¶æ‡¶≤‡¶ø ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶®
  if (!auth.currentUser) {
      document.getElementById('headerUserPoints').innerText = '';
  }
}, 3000);

// ‡¶≤‡¶ó‡¶á‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ UI ‡¶Ü‡¶™‡¶°‡ßá‡¶ü
auth.onAuthStateChanged(user => {
  const headerUserPointsElement = document.getElementById('headerUserPoints');

  if (user) {
    loadProfileImage(user);
    updateProfileDrawerUI(user); // authStateChanged ‡¶è ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ UI ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®
    loadPoints(user.uid);
    Promise.all([loadTasks()]) // ‡¶≤‡¶ó‡¶á‡¶® ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
      .then(() => {
        clearTimeout(loadingTimeout);
        document.getElementById("loadingScreen").style.display = "none";
        document.getElementById("dashboardContent").style.display = "block";
        closeProfileDrawer(); // ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶Ü‡¶õ‡ßá ‡¶Ø‡¶ñ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßá
      })
      .catch((err) => {
        console.error("‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶≤‡ßã‡¶° ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ:", err);
        clearTimeout(loadingTimeout);
        document.getElementById("loadingScreen").style.display = "none";
        document.getElementById("dashboardContent").style.display = "block";
        closeProfileDrawer(); // ‡¶è‡¶∞‡¶∞ ‡¶π‡¶≤‡ßá‡¶ì ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡ßÅ‡¶®
      });
  } else {
    clearTimeout(loadingTimeout);
    document.getElementById("loadingScreen").style.display = "none";
    document.getElementById("dashboardContent").style.display = "block";
    // ‡¶è‡¶á ‡¶≤‡¶æ‡¶á‡¶®‡¶ü‡¶ø ‡¶∏‡¶∞‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá, ‡¶Ø‡¶æ‡¶§‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá‡¶ì ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶≤‡ßã‡¶° ‡¶π‡¶Ø‡¶º
    // document.getElementById("taskList").innerHTML = "<p class='task-message'>üîê ‡¶¶‡¶Ø‡¶º‡¶æ ‡¶ï‡¶∞‡ßá ‡¶≤‡¶ó‡¶á‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶®‡•§</p>";
    loadTasks(); // ‡¶≤‡¶ó‡¶á‡¶® ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá‡¶ì ‡¶ü‡¶æ‡¶∏‡ßç‡¶ï ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®
    loadProfileImage(null);
    updateProfileDrawerUI(null);
    closeProfileDrawer(); // ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶°‡ßç‡¶∞‡¶Ø‡¶º‡¶æ‡¶∞ ‡¶¨‡¶®‡ßç‡¶ß ‡¶Ü‡¶õ‡ßá ‡¶Ø‡¶ñ‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶≤‡¶ó‡¶á‡¶® ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
    if (headerUserPointsElement) {
        headerUserPointsElement.innerText = '';
    }
  }
});

// --- Utility Functions & Animations ---
// Loading dots animation
const loadingText = document.querySelector('.loading-text');
let dotCount = 0;
setInterval(() => {
  dotCount = (dotCount + 1) % 4;
  loadingText.innerHTML = `‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®${'.'.repeat(dotCount)}`;
}, 500);

function setNotificationCount(count) {
  const notifyCount = document.querySelector('.notify-count');
  if (notifyCount) {
    notifyCount.textContent = count;
    notifyCount.style.display = count > 0 ? 'inline-block' : 'none';
  }
}
